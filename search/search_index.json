{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to TigerGo! A TigerGraph Wrapper in Golang Quickstart First, import the TigerGo library. go get github.com/GenericP3rson/TigerGo Next, create a solution on TigerGraph cloud, then connect to the solution in your Go file. package main import \"github.com/GenericP3rson/TigerGo\" func main() { conn := TigerGo.TigerGraphConnection{ Token: \"TOKEN\", Host: \"https://SUBDOMAIN.i.tgcloud.io\", GraphName: \"GRAPHNAME\", Username: \"tigergraph\", Password: \"PASSWORD\" } } If you do not already have a token, you can leave the field blank, generate a token using conn.GetToken() , then replace the Token field. package main import( \"fmt\" \"github.com/GenericP3rson/TigerGo\" ) func main() { conn := TigerGo.TigerGraphConnection{ Token: \"\", // Leaving it empty for now Host: \"https://SUBDOMAIN.i.tgcloud.io\", GraphName: \"GRAPHNAME\", Username: \"tigergraph\", Password: \"PASSWORD\" } fmt.Println(conn.GetToken()) } Blogs and Tutorials Check out a few blogs and tutorials using TigerGo! An Introduction to Using TigerGraph with Go: Exploring COVID-19 Patient Cases","title":"Home"},{"location":"#welcome-to-tigergo","text":"A TigerGraph Wrapper in Golang","title":"Welcome to TigerGo!"},{"location":"#quickstart","text":"First, import the TigerGo library. go get github.com/GenericP3rson/TigerGo Next, create a solution on TigerGraph cloud, then connect to the solution in your Go file. package main import \"github.com/GenericP3rson/TigerGo\" func main() { conn := TigerGo.TigerGraphConnection{ Token: \"TOKEN\", Host: \"https://SUBDOMAIN.i.tgcloud.io\", GraphName: \"GRAPHNAME\", Username: \"tigergraph\", Password: \"PASSWORD\" } } If you do not already have a token, you can leave the field blank, generate a token using conn.GetToken() , then replace the Token field. package main import( \"fmt\" \"github.com/GenericP3rson/TigerGo\" ) func main() { conn := TigerGo.TigerGraphConnection{ Token: \"\", // Leaving it empty for now Host: \"https://SUBDOMAIN.i.tgcloud.io\", GraphName: \"GRAPHNAME\", Username: \"tigergraph\", Password: \"PASSWORD\" } fmt.Println(conn.GetToken()) }","title":"Quickstart"},{"location":"#blogs-and-tutorials","text":"Check out a few blogs and tutorials using TigerGo! An Introduction to Using TigerGraph with Go: Exploring COVID-19 Patient Cases","title":"Blogs and Tutorials"},{"location":"edge/","text":"Edge Functions GetEdges GetEdges(sourceVertexType, sourceVertexId string) Returns all edges connected to a specific vertex. DelEdges DelEdges(sourceVertexType, sourceVertexId, edgeType, targetVertexType, targetVertexId Deletes a specific edge type between two specific vertices.","title":"Edge Functions"},{"location":"edge/#edge-functions","text":"","title":"Edge Functions"},{"location":"edge/#getedges","text":"GetEdges(sourceVertexType, sourceVertexId string) Returns all edges connected to a specific vertex.","title":"GetEdges"},{"location":"edge/#deledges","text":"DelEdges(sourceVertexType, sourceVertexId, edgeType, targetVertexType, targetVertexId Deletes a specific edge type between two specific vertices.","title":"DelEdges"},{"location":"other/","text":"Other Functions Echo Echo() Returns \"Hello GSQL\" GetVersion GetVersion() Returns version. Get Token GetToken() Returns a token based on the username, password, and graphname. Get Endpoints GetEndpoints(builtin, dynamic, static) Returns the endpoints. Get Statistics GetStatistics(seconds) Returns statistics over a certain amount of time.","title":"Other Functions"},{"location":"other/#other-functions","text":"","title":"Other Functions"},{"location":"other/#echo","text":"Echo() Returns \"Hello GSQL\"","title":"Echo"},{"location":"other/#getversion","text":"GetVersion() Returns version.","title":"GetVersion"},{"location":"other/#get-token","text":"GetToken() Returns a token based on the username, password, and graphname.","title":"Get Token"},{"location":"other/#get-endpoints","text":"GetEndpoints(builtin, dynamic, static) Returns the endpoints.","title":"Get Endpoints"},{"location":"other/#get-statistics","text":"GetStatistics(seconds) Returns statistics over a certain amount of time.","title":"Get Statistics"},{"location":"query/","text":"Query Functions Run Installed Query RunInstalledQuery(queryName, params) Runs an installed query. Parameters: string queryName : name of installed query map[string]string params : string-to-string map of params for query","title":"Query Functions"},{"location":"query/#query-functions","text":"","title":"Query Functions"},{"location":"query/#run-installed-query","text":"RunInstalledQuery(queryName, params) Runs an installed query. Parameters: string queryName : name of installed query map[string]string params : string-to-string map of params for query","title":"Run Installed Query"},{"location":"vertex/","text":"Vertex Functions GetVertices GetVertices(vertexType) Returns all the vertices of a certain type. GetVerticesById GetVerticesById(vertexType, vertexId) Returns the a specific vertex by ID. GetVertexCount GetVertexCount(vertexType) Returns the number of vertices of a specific type. DelVertices DelVertices(vertexType) Deletes all vertices of a specific type. DelVerticesById DelVerticesById(vertexType, vertexId) Deletes a specific vertex by ID.","title":"Vertex Functions"},{"location":"vertex/#vertex-functions","text":"","title":"Vertex Functions"},{"location":"vertex/#getvertices","text":"GetVertices(vertexType) Returns all the vertices of a certain type.","title":"GetVertices"},{"location":"vertex/#getverticesbyid","text":"GetVerticesById(vertexType, vertexId) Returns the a specific vertex by ID.","title":"GetVerticesById"},{"location":"vertex/#getvertexcount","text":"GetVertexCount(vertexType) Returns the number of vertices of a specific type.","title":"GetVertexCount"},{"location":"vertex/#delvertices","text":"DelVertices(vertexType) Deletes all vertices of a specific type.","title":"DelVertices"},{"location":"vertex/#delverticesbyid","text":"DelVerticesById(vertexType, vertexId) Deletes a specific vertex by ID.","title":"DelVerticesById"}]}